{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\songdodongnae-react\\\\songdodongnae\\\\src\\\\component\\\\SocialLoginBtn.js\",\n  _s = $RefreshSig$();\nimport '../css/SocialLoginBtn.css';\n// import loginUrls from '../config/loginUrls.json';\nimport { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { apiClient } from \"../apiClient\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport googleLogo from '../images/google-logo.svg';\nimport naverLogo from '../images/naver-logo.svg';\nimport kakaoLogo from '../images/kakao-logo.svg';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocialLoginBtn = () => {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [recentProvider, setRecentProvider] = useState(null);\n  const handleLoginClick = async () => {\n    try {\n      var _res$data;\n      setLoading(true);\n      const res = await axios.get(\"/api/users/access-token/0\", {\n        // 프록시 사용 전제(CRA setupProxy.js). 절대 URL 쓰지 마세요.\n        responseType: \"text\",\n        // ← 순수 문자열 JWT\n        transformResponse: [d => d],\n        // 자동 JSON 파싱 방지\n        validateStatus: s => s < 500,\n        // 401/403도 resolve로 받기\n        headers: {\n          Authorization: undefined\n        } // 혹시 모를 인터셉터 영향 차단\n      });\n      const token = ((_res$data = res.data) !== null && _res$data !== void 0 ? _res$data : \"\").trim();\n      console.log(\"token\", token);\n      // 간단 JWT 형태 검증(헤더.페이로드.시그니처 3부분)\n      if (token.split(\".\").length === 3) {\n        login(token);\n        navigate(\"/\");\n      }\n    } catch (e) {\n      console.error(\"로그인 실패:\", e);\n      alert(\"로그인 실패: 토큰을 받을 수 없습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const savedProvider = localStorage.getItem(\"recentLoginProvider\");\n    if (savedProvider) {\n      setRecentProvider(savedProvider);\n    }\n  }, []);\n  const loginButtonClick = (url, provider) => {\n    localStorage.setItem(\"recentLoginProvider\", provider); // 클릭한 provider 저장\n    //window.location.href = 'loginUrls['login-base'] + loginUrls[url];'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-text\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uC1A1\\uB3C4\\uB3D9\\uB124\\uC5D0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), \"\\uC624\\uC2E0 \\uAC83\\uC744 \\uD658\\uC601\\uD574\\uC694!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-btn-wrapper\",\n          children: [recentProvider === 'google' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recent-badge\",\n            children: \"\\uCD5C\\uADFC \\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"google-button\",\n            onClick: () => handleLoginClick(),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: googleLogo,\n              width: \"20px\",\n              height: \"20px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), \"\\uAD6C\\uAE00 \\uB85C\\uADF8\\uC778\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-btn-wrapper\",\n          children: [recentProvider === 'naver' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recent-badge\",\n            children: \"\\uCD5C\\uADFC \\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"naver-button\",\n            onClick: () => loginButtonClick('naver-login', 'naver'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: naverLogo,\n              width: \"16px\",\n              height: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), \"\\uB124\\uC774\\uBC84 \\uB85C\\uADF8\\uC778\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-btn-wrapper\",\n          children: [recentProvider === 'kakao' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recent-badge\",\n            children: \"\\uCD5C\\uADFC \\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"kakao-button\",\n            onClick: () => loginButtonClick('kakao-login', 'kakao'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: kakaoLogo,\n              width: \"18px\",\n              height: \"18px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), \"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"without-login\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"without-text\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uC5C6\\uC774 \\uC774\\uC6A9\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(SocialLoginBtn, \"7rpMO+NVdkdWEFDip8ohAvssNVI=\", false, function () {\n  return [useNavigate];\n});\n_c = SocialLoginBtn;\nexport default SocialLoginBtn;\nvar _c;\n$RefreshReg$(_c, \"SocialLoginBtn\");","map":{"version":3,"names":["useEffect","useState","useContext","useNavigate","apiClient","AuthContext","googleLogo","naverLogo","kakaoLogo","axios","jsxDEV","_jsxDEV","SocialLoginBtn","_s","login","navigate","loading","setLoading","recentProvider","setRecentProvider","handleLoginClick","_res$data","res","get","responseType","transformResponse","d","validateStatus","s","headers","Authorization","undefined","token","data","trim","console","log","split","length","e","error","alert","savedProvider","localStorage","getItem","loginButtonClick","url","provider","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","width","height","_c","$RefreshReg$"],"sources":["C:/Users/user/songdodongnae-react/songdodongnae/src/component/SocialLoginBtn.js"],"sourcesContent":["import '../css/SocialLoginBtn.css';\r\n// import loginUrls from '../config/loginUrls.json';\r\nimport { useEffect, useState, useContext } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { apiClient } from \"../apiClient\";\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\nimport googleLogo from '../images/google-logo.svg';\r\nimport naverLogo from '../images/naver-logo.svg';\r\nimport kakaoLogo from '../images/kakao-logo.svg';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst SocialLoginBtn = () => {\r\n\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [recentProvider, setRecentProvider] = useState(null);\r\n  const handleLoginClick = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get(\"/api/users/access-token/0\", {\r\n        // 프록시 사용 전제(CRA setupProxy.js). 절대 URL 쓰지 마세요.\r\n        responseType: \"text\",                    // ← 순수 문자열 JWT\r\n        transformResponse: [(d) => d],           // 자동 JSON 파싱 방지\r\n        validateStatus: (s) => s < 500,          // 401/403도 resolve로 받기\r\n        headers: { Authorization: undefined },   // 혹시 모를 인터셉터 영향 차단\r\n      });\r\n  \r\n      const token = (res.data ?? \"\").trim();\r\n      console.log(\"token\", token)\r\n      // 간단 JWT 형태 검증(헤더.페이로드.시그니처 3부분)\r\n      if (token.split(\".\").length === 3) {\r\n        login(token);\r\n        navigate(\"/\");}\r\n    } catch (e) {\r\n      console.error(\"로그인 실패:\", e);\r\n      alert(\"로그인 실패: 토큰을 받을 수 없습니다.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const savedProvider = localStorage.getItem(\"recentLoginProvider\");\r\n    if (savedProvider) {\r\n      setRecentProvider(savedProvider);\r\n    }\r\n  }, []);\r\n\r\n  const loginButtonClick = (url, provider) => {\r\n   \r\n    localStorage.setItem(\"recentLoginProvider\", provider); // 클릭한 provider 저장\r\n    //window.location.href = 'loginUrls['login-base'] + loginUrls[url];'\r\n  \r\n  };\r\n  \r\n  return (\r\n    <div className='login-container'>\r\n      <div className='main-display'>\r\n        <div className='welcome-text'>\r\n          <div>송도동네에<br />오신 것을 환영해요!</div>\r\n        </div>\r\n        <div className='login-buttons'>\r\n          {/* 구글 로그인 */}\r\n          <div className=\"social-btn-wrapper\">\r\n            {recentProvider === 'google' && <div className=\"recent-badge\">최근 로그인</div>}\r\n            <span className='google-button' onClick={() => handleLoginClick()}>\r\n              <img src={googleLogo} width=\"20px\" height=\"20px\" />구글 로그인\r\n            </span>\r\n          </div>\r\n\r\n          {/* 네이버 로그인 */}\r\n          <div className=\"social-btn-wrapper\">\r\n            {recentProvider === 'naver' && <div className=\"recent-badge\">최근 로그인</div>}\r\n            <span className='naver-button' onClick={() => loginButtonClick('naver-login', 'naver')}>\r\n              <img src={naverLogo} width=\"16px\" height=\"16px\" />네이버 로그인\r\n            </span>\r\n          </div>\r\n\r\n          {/* 카카오 로그인 */}\r\n          <div className=\"social-btn-wrapper\">\r\n            {recentProvider === 'kakao' && <div className=\"recent-badge\">최근 로그인</div>}\r\n            <span className='kakao-button' onClick={() => loginButtonClick('kakao-login', 'kakao')}>\r\n              <img src={kakaoLogo} width=\"18px\" height=\"18px\" />카카오 로그인\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='without-login'>\r\n        <span className='without-text'>로그인 없이 이용하기</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SocialLoginBtn;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}