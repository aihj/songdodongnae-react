{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\songdodongnae-react\\\\songdodongnae\\\\src\\\\page\\\\Series\\\\MonthSlider.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './MonthSlider.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst months = [{\n  id: 1,\n  name: '1월',\n  color: '#FF6B6B'\n}, {\n  id: 2,\n  name: '2월',\n  color: '#4ECDC4'\n}, {\n  id: 3,\n  name: '3월',\n  color: '#45B7D1'\n}, {\n  id: 4,\n  name: '4월',\n  color: '#96CEB4'\n}, {\n  id: 5,\n  name: '5월',\n  color: '#FFEAA7'\n}, {\n  id: 6,\n  name: '6월',\n  color: '#DDA0DD'\n}, {\n  id: 7,\n  name: '7월',\n  color: '#98D8C8'\n}, {\n  id: 8,\n  name: '8월',\n  color: '#F7DC6F'\n}, {\n  id: 9,\n  name: '9월',\n  color: '#BB8FCE'\n}, {\n  id: 10,\n  name: '10월',\n  color: '#85C1E9'\n}, {\n  id: 11,\n  name: '11월',\n  color: '#F8C471'\n}, {\n  id: 12,\n  name: '12월',\n  color: '#82E0AA'\n}];\nexport default function MonthSlider({\n  onMonthSelect\n}) {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  // 한 번에 보여줄 카드의 개수 (화면 너비에 맞춰 조정)\n  const visibleCards = 5;\n  const handleMonthClick = month => {\n    setSelectedMonth(month);\n    // 부모 컴포넌트에 선택된 월 전달\n    if (onMonthSelect) {\n      onMonthSelect(month);\n    }\n  };\n  const handlePrev = () => {\n    setCurrentIndex(prev => Math.max(0, prev - 1));\n  };\n  const handleNext = () => {\n    setCurrentIndex(prev => Math.min(months.length - visibleCards, prev + 1));\n  };\n  const getVisibleMonths = () => {\n    return months.slice(currentIndex, currentIndex + visibleCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"month-slider-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button prev-button\",\n        onClick: handlePrev,\n        disabled: currentIndex === 0,\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-slider-track\",\n        children: getVisibleMonths().map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `month-card ${(selectedMonth === null || selectedMonth === void 0 ? void 0 : selectedMonth.id) === month.id ? 'selected' : ''}`,\n          style: {\n            backgroundColor: month.color\n          },\n          onClick: () => handleMonthClick(month),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-name\",\n            children: month.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, month.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button next-button\",\n        onClick: handleNext,\n        disabled: currentIndex >= months.length - visibleCards,\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(MonthSlider, \"tWUg1Jq7jNLgNLVC/3XYuGSSWOQ=\");\n_c = MonthSlider;\nvar _c;\n$RefreshReg$(_c, \"MonthSlider\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","months","id","name","color","MonthSlider","onMonthSelect","_s","selectedMonth","setSelectedMonth","currentIndex","setCurrentIndex","visibleCards","handleMonthClick","month","handlePrev","prev","Math","max","handleNext","min","length","getVisibleMonths","slice","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/user/songdodongnae-react/songdodongnae/src/page/Series/MonthSlider.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport './MonthSlider.css';\r\n\r\nconst months = [\r\n  { id: 1, name: '1월', color: '#FF6B6B' },\r\n  { id: 2, name: '2월', color: '#4ECDC4' },\r\n  { id: 3, name: '3월', color: '#45B7D1' },\r\n  { id: 4, name: '4월', color: '#96CEB4' },\r\n  { id: 5, name: '5월', color: '#FFEAA7' },\r\n  { id: 6, name: '6월', color: '#DDA0DD' },\r\n  { id: 7, name: '7월', color: '#98D8C8' },\r\n  { id: 8, name: '8월', color: '#F7DC6F' },\r\n  { id: 9, name: '9월', color: '#BB8FCE' },\r\n  { id: 10, name: '10월', color: '#85C1E9' },\r\n  { id: 11, name: '11월', color: '#F8C471' },\r\n  { id: 12, name: '12월', color: '#82E0AA' }\r\n];\r\n\r\nexport default function MonthSlider({ onMonthSelect }) {\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n  // 한 번에 보여줄 카드의 개수 (화면 너비에 맞춰 조정)\r\n  const visibleCards = 5;\r\n\r\n  const handleMonthClick = (month) => {\r\n    setSelectedMonth(month);\r\n    // 부모 컴포넌트에 선택된 월 전달\r\n    if (onMonthSelect) {\r\n      onMonthSelect(month);\r\n    }\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentIndex(prev => Math.max(0, prev - 1));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex(prev => Math.min(months.length - visibleCards, prev + 1));\r\n  };\r\n\r\n  const getVisibleMonths = () => {\r\n    return months.slice(currentIndex, currentIndex + visibleCards);\r\n  };\r\n\r\n  return (\r\n    <div className=\"month-slider-container\">\r\n   \r\n      <div className=\"month-slider\">\r\n        <button \r\n          className=\"nav-button prev-button\" \r\n          onClick={handlePrev}\r\n          disabled={currentIndex === 0}\r\n        >\r\n          ‹\r\n        </button>\r\n        \r\n        <div className=\"month-slider-track\">\r\n          {getVisibleMonths().map((month) => (\r\n            <div\r\n              key={month.id}\r\n              className={`month-card ${selectedMonth?.id === month.id ? 'selected' : ''}`}\r\n              style={{ backgroundColor: month.color }}\r\n              onClick={() => handleMonthClick(month)}\r\n            >\r\n              <div className=\"month-name\">{month.name}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        <button \r\n          className=\"nav-button next-button\" \r\n          onClick={handleNext}\r\n          disabled={currentIndex >= months.length - visibleCards}\r\n        >\r\n          ›\r\n        </button>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}