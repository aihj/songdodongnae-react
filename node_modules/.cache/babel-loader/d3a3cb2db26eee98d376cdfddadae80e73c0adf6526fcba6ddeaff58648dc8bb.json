{"ast":null,"code":"import axios from \"axios\";\n//import url from \"./config/apiUrls.json\"\n\n// Axios 인스턴스 생성\nexport const apiClient = axios.create({\n  // 백엔드 API 기본 URL\n  timeout: 5000 // 요청 제한 시간 (ms)\n});\n\n// 요청 인터셉터: 요청마다 토큰 추가\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"accessToken\"); // localStorage에서 토큰 가져오기\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Authorization 헤더에 토큰 추가\n  }\n  return config;\n}, error => {\n  return Promise.reject(error); // 요청 에러 처리\n});\n\n// 데이터 요청 함수\nexport const fetchData = async () => {\n  try {\n    const response = await apiClient.get(\"/data\"); // GET 요청\n    console.log(response.data); // 응답 데이터 출력\n    return response.data;\n  } catch (error) {\n    console.error(\"API 요청 에러:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","apiClient","create","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","fetchData","response","get","console","log","data"],"sources":["C:/Users/user/songdodongnae-react/songdodongnae/src/apiClient.js"],"sourcesContent":["import axios from \"axios\";\r\n//import url from \"./config/apiUrls.json\"\r\n\r\n// Axios 인스턴스 생성\r\nexport const apiClient = axios.create({\r\n    // 백엔드 API 기본 URL\r\n    timeout: 5000, // 요청 제한 시간 (ms)\r\n});\r\n\r\n// 요청 인터셉터: 요청마다 토큰 추가\r\napiClient.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem(\"accessToken\"); // localStorage에서 토큰 가져오기\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`; // Authorization 헤더에 토큰 추가\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error); // 요청 에러 처리\r\n    }\r\n);\r\n\r\n// 데이터 요청 함수\r\nexport const fetchData = async () => {\r\n    try {\r\n        const response = await apiClient.get(\"/data\"); // GET 요청\r\n        console.log(response.data); // 응답 데이터 출력\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error(\"API 요청 에러:\", error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA;AACA,OAAO,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAClC;EACAC,OAAO,EAAE,IAAI,CAAE;AACnB,CAAC,CAAC;;AAEF;AACAF,SAAS,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC7BC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;EACnD,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE,CAAC,CAAC;EACtD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAM,KAAK,IAAK;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC;AAClC,CACJ,CAAC;;AAED;AACA,OAAO,MAAMG,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMhB,SAAS,CAACiB,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;IAC5B,OAAOJ,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZM,OAAO,CAACN,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IAClC,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}